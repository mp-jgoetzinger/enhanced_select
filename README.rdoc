= Overview

An enhanced select form helper that allows you to use the full {HTML spec}[http://www.w3.org/TR/html5] for select
option elements (example: HTML5 data-* attributes, etc.) This is more than what you get with the
default Rails select helper which only allows you to specify value, text, and selected/disabled attributes.

= Features

* Fully customizable HTML5 attributes for select options.

= Requirements

1. {Ruby on Rails}[http://rubyonrails.org].

= Setup

Type the following from the command line to install:

  gem install enhanced_select

Add the following to your Gemfile:

  gem "enhanced_select"

= Usage

Use the +enhanced_select+ instead of +select+ or use +enhanced_options_for_select+ instead of +options_for_select+ helper
methods in your views. Example:

  <%= form_for @post do |form| %>
    <div><%= form.enhanced_select :category_id, @category_options %></div>
  <% end %>

...or alternatively:

  <%= form_tag "/posts/" do %>
    <div><%= select_tag "category_id", enhanced_options_for_select(@category_options) %></div>
  <% end %>

The +enhanced_select+ or +enhanced_options_for_select+ method takes all the standard options as the default Rails select
method. The only difference is that it expects an array of hashes instead of an array of arrays. For example, in the past
you could only define select options as follows:

  @category_options = [["News", 1], ["Software", 2], ["Books", 3]]

...but now you can do the following instead:

  @category_options = [{text: "News", value: 1}, {text: "Software", value: 2}, {text: "Books", value: 3}]

Notice the use of the :text key in the hashes above. With an enhanced select option, you have to explicitly define what your
option text will be instead of the implicit assumption when using the Rails default select options.

In either case, the resulting output would be the following:

  <select id="<auto generated>" name="<auto auto generated>">
    <option value="1">News</option>
    <option value="2">Software</option>
    <option value="3">Books</option>
  </select>

Where this gets interesting is when you want to make use of additional option attributes like HTML5 data-* attributes.
For example:

  @category_options = [
    {text: "News", value: 1, "data-icon" => "/icons/news.png"},
    {text: "Software", value: 2, "data-icon" => "/icons/software.png"},
    {text: "Books", value: 3, "data-icon" => "/icons/books.png"}
  ]

Which produces the following output:

  <select id="<auto generated>" name="<auto auto generated>">
    <option value="1" data-icon="/icons/news.png">News</option>
    <option value="2" data-icon="/icons/software.png">Software</option>
    <option value="3" data-icon="/icons/books.png">Books</option>
  </select>

The possibilities are endless as you can use any valid HTM5 attribute for your select options now.

= Company

{Red Alchemist}[http://www.redalchemist.com]

= Author

{Brooke Kuhlmann}[http://www.redalchemist.com]

= License

Copyright (c) 2010 {Red Alchemist}[http://www.redalchemist.com].
Read the LICENSE for details.

= History

Read the CHANGELOG for details.
